package in.co.mark.webservices.contacts.domain.model;

import in.co.mark.common.persistence.util.EntityActiveStatus;

/**
 * A ContactAddress represents a mapping of a {@link Contact} and an
 * {@link Address}. While a {@code Contact} can have more than one addresses, an
 * {@code Address} can also be mapped to more than one contact or to different
 * {@link AddressType}.
 */
public class ContactAddress {
	/**
	 * The <i>primary key</i> of this entity. It will be generated by the DB system
	 * on successful creation of the respective record.
	 */
	private long id;
	private long contactId;
	private long addressId;
	private long addressTypeId;
	/**
	 * Care-of part of the address. Usually it will be placed above the recipient
	 * line.
	 */
	private String careOf;
	private EntityActiveStatus Status;
	private long createdOn;
	private long lastUpdatedOn;

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public long getContactId() {
		return contactId;
	}

	public void setContactId(long contactId) {
		this.contactId = contactId;
	}

	public long getAddressId() {
		return addressId;
	}

	public void setAddressId(long addressId) {
		this.addressId = addressId;
	}

	public long getAddressTypeId() {
		return addressTypeId;
	}

	public void setAddressTypeId(long addressTypeId) {
		this.addressTypeId = addressTypeId;
	}

	public String getCareOf() {
		return careOf;
	}

	public void setCareOf(String careOf) {
		this.careOf = careOf;
	}

	public EntityActiveStatus getStatus() {
		return Status;
	}

	public void setStatus(EntityActiveStatus status) {
		Status = status;
	}

	public long getCreatedOn() {
		return createdOn;
	}

	public void setCreatedOn(long createdOn) {
		this.createdOn = createdOn;
	}

	public long getLastUpdatedOn() {
		return lastUpdatedOn;
	}

	public void setLastUpdatedOn(long lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}
}
