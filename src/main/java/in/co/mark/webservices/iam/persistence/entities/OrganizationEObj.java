package in.co.mark.webservices.iam.persistence.entities;

import in.co.mark.common.persistence.EntityBase;
import in.co.mark.common.persistence.util.EntityActiveStatus;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.SequenceGenerator;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@AllArgsConstructor
@NoArgsConstructor
@Entity(name = "organizations")
public class OrganizationEObj extends EntityBase {
	/**
	 * The <i>primary key</i> of this entity. It will be auto-generated by the DB
	 * system on successful creation of the respective record.
	 */
	@Getter
	@Setter
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "IAM_OrgIdSequence")
	@SequenceGenerator(name = "IAM_OrgIdSequence", sequenceName = "IAM_OrgIdSequence")
	private long id;

	@Getter
	@Setter
	@Column(name = "super_admin_id")
	private long superAdminId;

	@Getter
	@Setter
	@Column(name = "org_name")
	private String orgName;

	@Getter
	@Setter
	@Column(name = "description")
	private String desc;

	/**
	 * ID of the parent organization, if any.
	 * <p>
	 * It can be used to, say deactivate all organization just by deactivating the
	 * parent organization. However, activating organization should be done
	 * individually.
	 * </p>
	 */
	@Getter
	@Setter
	@Column(name = "parent_org_id")
	private long parentOrgId;

	@Getter
	@Setter
	@Column(name = "status")
	private EntityActiveStatus status;
}
